syntax = "proto3";

package ng.internal;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service InternalService {
  rpc Hello(HelloRequest) returns (HelloResponse) {}

  rpc GetSettings(google.protobuf.Empty) returns (Settings) {}
  rpc SetSettings(PartialSettings) returns (Settings) {}
  rpc ResetSettings(google.protobuf.Empty) returns (Settings) {}

  rpc GetControllerStats(google.protobuf.Empty) returns (ControllerStats) {}

  rpc GetSoftwareInfos(google.protobuf.Empty) returns (SoftwareInfos) {}
  rpc GetFirmwareInfos(google.protobuf.Empty) returns (FirmwareInfos) {}

  rpc GetInfos(google.protobuf.Empty) returns (Infos) {}
}

message PartialSettings { optional bool debug_mode = 2; }

message Settings { bool debug_mode = 2; }

message HelloRequest { string name = 1; }

message HelloResponse {
  string message = 1;
  google.protobuf.Timestamp timestamp = 2;
  map<string, uint32> map = 3;
  repeated string strings = 4;
  bytes bytes = 12;
}

message SoftwareBuildInfos {
  string version = 1;
  string commit = 2;
  google.protobuf.Timestamp build_date = 3;
}

message SoftwareRuntimeInfos {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp system_time = 2;
}

message SoftwareInfos {
  optional SoftwareBuildInfos build = 1;
  optional SoftwareRuntimeInfos runtime = 2;

  google.protobuf.Timestamp update_date = 3;
}

message FirmwareBuildInfos {
  string distro = 1;
  string distro_version = 2;
  optional google.protobuf.Timestamp build_date = 3;
}

message FirmwareInfos { FirmwareBuildInfos build = 1; }

message Infos {
  optional SoftwareInfos software = 1;
  optional FirmwareInfos firmware = 2;
  optional ControllerStats controller_stats = 3;
}

message ControllerStats {
  uint32 iface_rx = 1;
  uint32 iface_tx = 2;
  uint32 iface_err = 3;
  uint32 iface_malformed = 4;

  uint32 broadcast_tx = 5;

  uint32 pq_pushed = 10;
  uint32 pq_answered = 11;
  uint32 pq_timeout = 12;
  uint32 pq_duplicate_dropped = 13;

  uint32 api_rx = 20;
  uint64 loop_runs = 21;
}
